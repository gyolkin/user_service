version: "3.8"

services:
  db:
    container_name: postgres-database
    image: postgres:14-alpine
    hostname: ${DB_HOST}
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  pgadmin:
    container_name: postgres-admin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

  backend:
    container_name: web-api
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    depends_on:
      - db
      - pgadmin
    environment:
      - DB_URI=${DB_DRIVER}://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DEBUG=${DEBUG}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 2m
      timeout: 10s
      retries: 3
      start_period: 5s

volumes:
  postgres_data:
  pgadmin_data:
